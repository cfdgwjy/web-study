            
            字符串-字符串的增强

1.字符串的遍历接口
ES6为字符串增加了遍历器接口，所以字符串可以被for..of循环
2.模板字符串
              字符串的新增方法
 1.string.raw() 字符串转义
 2.实例方法
 includes()  是否找到参数字符串
 startswith() 参数字符串是否在原字符串的头部
 endswdith() 参数字符串是否在原字符串的尾部
 它们都返回布尔值。  true false
 3.repeat() 返回重复n次的字符串
 padstart() padend() 补足字符串长度
 1.trimstart() trimend() 去除头部、尾部的空格。
 4.matchAll() 返回一个正则表达式在当前字符串的所有匹配
 
               数值的扩展
1.ES6 在Number对象上，新提供了Number.isFinite()和Number.isNaN()两个方法。  finite:有限  isNaN
2.Number.parseInt(), Number.parseFloat()
ES6 将全局方法parseInt()和parseFloat()，移植到Number对象上面，行为完全保持不变。
3.Number.Intger 是否整数

Math对象增加了和数学相关的调用
1.Math.trunc()
Math.trunc方法用于去除一个数的小数部分，返回整数部分。
Math.sign()
Math.sign方法用来判断一个数到底是正数、负数、还是零。

                数组的扩展
1.扩展运算符 扩展运算符spread(...)。它相当于rest参数的逆运算，将一个数组转为用逗号分隔的参数序列。
例子：console.log(1,2,3) //1,2,3  console.log(1,...[2,3,4])   //1,2,3,4
替代函数的apply方法。例子：ES5: Math.Max.apply(null,[2,3,4,5])       ES6: Math.Max(...[2,3,4,5])
在ES5写法中，push方法中参数不能是数组。只能用apply方法传入数组。
